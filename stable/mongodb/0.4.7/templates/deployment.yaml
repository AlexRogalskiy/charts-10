{{ $container := .Values._config.mongodb.containers.mongodb }}
{{ $secret := .Values._config.mongodb.envs.secret }}
{{ $info := .Values._config.mongodb.envs.info }}
{{ $volume := .Values._config.mongodb.volumes.data }}
{{ $resource := .Values._config.mongodb.resources.resource }}
{{ $service := .Values._config.mongodb.services.mongodb }}
{{ $global := . }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ $container.image }}"
        imagePullPolicy: {{ $container.pullPolicy }}
        env:
        {{ range $v := $secret }}
        - name: {{ $v.name }}
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" $global }}
              key: {{ $v.name }}
        {{ end }}
        {{ range $v := $info }}
        - name: {{ $v.name }}
          value: {{ $v.value }}
        {{ end }}
        ports:
        {{ range $i, $v := $service.ports -}}
        - name: mongodb{{ $i }}
          containerPort: {{ $v.targetPort }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: {{ $volume.mountPath }}
        resources:
          requests:
            cpu: {{ $resource.cpuRequest }}
            memory: {{ $resource.memoryRequest }}
          limits:
            cpu: {{ $resource.cpuLimit }}
            memory: {{ $resource.memoryLimit }}
      volumes:
      - name: data
      {{- if ne $volume.name "" }}
        persistentVolumeClaim:
          claimName: {{ $volume.name }}
      {{- else }}
        emptyDir: {}
      {{- end -}}

