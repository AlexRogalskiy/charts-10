{{ $init := .Values._config.mysql.containers.init }}
{{ $container := .Values._config.mysql.containers.mysql }}
{{ $secret := .Values._config.mysql.envs.secret }}
{{ $info := .Values._config.mysql.envs.info }}
{{ $volume := .Values._config.mysql.volumes.data }}
{{ $resource := .Values._config.mysql.resources.resource }}
{{ $service := .Values._config.mysql.services.mysql }}
{{ $global := . }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
              {
                  "name": "{{ template "fullname" . }}-init",
                  "image": "{{ $init.image }}",
                  "command": [
                      "rm",
                      "-fr",
                      "/var/lib/mysql/lost+found"
                  ],
                  "volumeMounts": [
                      {
                          "name": "data",
                          "mountPath": "/var/lib/mysql"
                      }
                  ],
                  "imagePullPolicy": "{{ $init.pullPolicy }}",
                  "resources": {
                      "requests": {
                          "cpu": "{{ $resource.cpuRequest }}",
                          "memory": "{{ $resource.memoryRequest }}"
                      },
                      "limits": {
                          "cpu": "{{ $resource.cpuLimit }}",
                          "memory": "{{ $resource.memoryLimit }}"
                      }
                  }
              }
          ]'
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ $container.image }}"
        imagePullPolicy: {{ $container.pullPolicy }}
        resources:
          requests:
            cpu: {{ $resource.cpuRequest }}
            memory: {{ $resource.memoryRequest }}
          limits:
            cpu: {{ $resource.cpuLimit }}
            memory: {{ $resource.memoryLimit }}
        env:
        {{ range $v := $secret }}
        - name: {{ $v.name }}
          valueFrom:
            secretKeyRef:
              name: {{ if ne $service.name "" -}} {{ $service.name }} {{- else -}} {{ template "fullname" $global }} {{- end }}
              key: {{ $v.name }}
        {{ end }}
        {{ range $v := $info }}
        - name: {{ $v.name }}
          value: {{ $v.value }}
        {{ end }}
        ports:
        {{ range $i, $v := $service.ports -}}
        - name: mysql{{ $i }}
          containerPort: {{ $v.targetPort }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: {{ $volume.mountPath }}
      volumes:
      - name: data
      {{- if ne $volume.name "" }}
        persistentVolumeClaim:
          claimName: {{ $volume.name }}
      {{- else }}
        emptyDir: {}
      {{- end -}}

